server:
  port: 10010 #服务端口
spring:
  application:
    name: zuul-server01 #指定服务名

#zuul:
#  routes:
#    user-client: # 这里是路由id，随意写
#      path: /user-client/** # 这里是映射路径
#      #      url: http://127.0.0.1:8080 # 映射路径对应的实际url地址
#      service-id: user-client # 指定服务名称

#简化上方的路由
zuul:
  prefix: /api # 添加路由前缀
  routes:
    user-client: /user-client/** # 这里是映射路径

#    注册到eureka注册中心
eureka:
  client:
    registry-fetch-interval-seconds: 5 # 获取服务列表的周期：5s
    service-url:
      defaultZone: http://127.0.0.1:10086/eureka
  instance:
    prefer-ip-address: true
    ip-address: 127.0.0.1

#重试机制，
user-server:
  ribbon:
    #    NFLoadBalancerRuleClassName: com.netflix.loadbalancer.RandomRule  #修改ribbon的负载均衡策略 为随机，不是默认的轮询
    ConnectTimeout: 250 # Ribbon的连接超时时间
    ReadTimeout: 1000 # Ribbon的数据读取超时时间
    OkToRetryOnAllOperations: true # 是否对所有操作都进行重试
    MaxAutoRetriesNextServer: 1 # 切换实例的重试次数
    MaxAutoRetries: 1 # 对当前实例的重试次数

#熔断控制
hystrix:
  command:
    default:
      execution:
        isolation:
          thread:
            timeoutInMilliseconds: 6000 # 设置hystrix的超时时间为10000ms   #默认1000
        timeout:
          enabled: true                    # 必须设置true，否则会交给ribbon
    serverMethod:
      execution:
        isolation:
          thread:
            timeoutInMilliseconds: 6000   #配置具体方法的超时时间


22年年  2男
